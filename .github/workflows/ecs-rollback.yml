# Code Generated by Sidekick is for learning and experimentation purposes only.

name: 'ECS Rollback'
on:
  workflow_call:
    inputs:
      previous_image_tag:
        required: true
        type: string
      aws_region:
        required: true
        type: string
      ecs_cluster:
        required: true
        type: string
      ecs_service:
        required: true
        type: string
      task_family:
        required: true
        type: string
      container_name:
        required: true
        type: string
      ecr_repo_name:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCOUNT_ID:
        required: true

jobs:
  rollback:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws_region }}

      - name: Download current ECS task definition
        id: task-def
        run: |
          aws ecs describe-task-definition --task-definition ${{ inputs.task_family }} > task-def.json

      - name: Update task definition with previous image
        id: new-task-def
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com/${{ inputs.ecr_repo_name }}:${{ inputs.previous_image_tag }}"
          jq --arg IMAGE_URI "$IMAGE_URI" --arg CONTAINER_NAME "${{ inputs.container_name }}" '
            .taskDefinition |
            .containerDefinitions |=
              (map(if .name == $CONTAINER_NAME then .image = $IMAGE_URI else . end)) |
            del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)
          ' task-def.json > new-task-def.json

      - name: Register new ECS task definition revision
        id: register-task-def
        run: |
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json --query "taskDefinition.taskDefinitionArn" --output text)
          echo "NEW_TASK_DEF_ARN=$NEW_TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Update ECS service to previous task definition
        run: |
          aws ecs update-service --cluster ${{ inputs.ecs_cluster }} --service ${{ inputs.ecs_service }} --task-definition $NEW_TASK_DEF_ARN
