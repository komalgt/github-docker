name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      # Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'ap-south-1' }}

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION || 'ap-south-1' }} |
          docker login --username AWS --password-stdin 792394825386.dkr.ecr.ap-south-1.amazonaws.com

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t myappservice:${{ github.sha }} .

      # Tag image for ECR
      - name: Tag Docker image
        run: |
          docker tag myappservice:${{ github.sha }} 792394825386.dkr.ecr.ap-south-1.amazonaws.com/myappservice:${{ github.sha }}

      # Push image to ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push 792394825386.dkr.ecr.ap-south-1.amazonaws.com/myappservice:${{ github.sha }}

      # Update task definition with new image
      - name: Prepare new ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-task-def.json # Path in your repo (see notes below)
          container-name: myappservice
          image: 792394825386.dkr.ecr.ap-south-1.amazonaws.com/myappservice:${{ github.sha }}

      # Deploy updated task definition to ECS
      - name: Deploy to ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: my-ecs-service
          cluster: my-ecs-cluster
