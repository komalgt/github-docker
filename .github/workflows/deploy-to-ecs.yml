name: Deploy image to ECS

on:
  push:
    tags:
      - 'v*'

env:
  AWS_REGION: ap-south-1                  # Update as needed
  ECR_REPOSITORY: myappservice            # Your ECR repository name
  ECS_CLUSTER: doc-cluster            # Your ECS cluster name
  ECS_SERVICE: doc-task-service            # Your ECS service name
  TASK_DEFINITION_FAMILY: doc-task # Your ECS task definition name
  CONTAINER_NAME: doc-task                    # Container name inside task def
  IMAGE_TAG: ${{ github.sha }}           # Use Git SHA for image tag

jobs:
  deploy:
    name: Build, Push & Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
            docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      - name: Tag Docker image
        run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Download current ECS task definition
        id: task-def
        run: |
          aws ecs describe-task-definition --task-definition $TASK_DEFINITION_FAMILY > task-def.json

      - name: Update task definition with new image
        id: new-task-def
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}"
          jq --arg IMAGE_URI "$IMAGE_URI" --arg CONTAINER_NAME "$CONTAINER_NAME" '
            .taskDefinition |
            .containerDefinitions |=
              (map(if .name == $CONTAINER_NAME then .image = $IMAGE_URI else . end)) |
            del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)
          ' task-def.json > new-task-def.json

      - name: Register new ECS task definition revision
        id: register-task-def
        run: |
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json --query "taskDefinition.taskDefinitionArn" --output text)
          echo "NEW_TASK_DEF_ARN=$NEW_TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Update ECS service to new task definition
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --task-definition $NEW_TASK_DEF_ARN
