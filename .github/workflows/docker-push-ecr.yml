name: Build and Push Docker Image to ECR

on:
  workflow_dispatch:
    inputs:
      image-name:
        description: 'Docker image name'
        required: true
      image-tag:
        description: 'Docker image tag'
        required: true

jobs:
  push-to-ecr:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-south-1                # Change to your AWS region
      ECR_REPOSITORY: myappservice          # Change to your ECR repository name

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Build Docker image
        run: |
          docker build -t ${{ github.event.inputs.image-name }}:${{ github.event.inputs.image-tag }} .

      - name: Tag Docker image
        env:
          IMAGE_NAME: ${{ github.event.inputs.image-name }}
          IMAGE_TAG: ${{ github.event.inputs.image-tag }}
          AWS_REGION: ${{ env.AWS_REGION }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_REGISTRY="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
          docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push Docker image to ECR
        env:
          IMAGE_TAG: ${{ github.event.inputs.image-tag }}
          AWS_REGION: ${{ env.AWS_REGION }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_REGISTRY="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
