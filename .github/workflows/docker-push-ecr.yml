# Code Generated by Sidekick is for learning and experimentation purposes only.
name: Build and Push Docker Image to ECR

on:
  workflow_dispatch:
    inputs:
      image-name:
        description: 'Docker image name'
        required: true
      image-tag:
        description: 'Docker image tag'
        required: true

jobs:
  push-to-ecr:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ github.event.inputs.image-name }}
      IMAGE_TAG: ${{ github.event.inputs.image-tag }}
      AWS_REGION: us-east-1                # Change to your AWS region
      ECR_REPOSITORY: my-repository        # Change to your ECR repository name

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Build Docker image
      run: |
        docker build -t $IMAGE_NAME:$IMAGE_TAG .

    - name: Tag Docker image
      run: |
        ECR_REGISTRY=$(aws sts get-caller-identity --query Account --output text).dkr.ecr.${AWS_REGION}.amazonaws.com
        docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Push Docker image to ECR
      run: |
        ECR_REGISTRY=$(aws sts get-caller-identity --query Account --output text).dkr.ecr.${AWS_REGION}.amazonaws.com
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

